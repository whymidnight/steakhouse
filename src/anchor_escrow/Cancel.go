// Code generated by https://github.com/gagliardetto/anchor-go. DO NOT EDIT.

package anchor_escrow

import (
	"errors"
	ag_binary "github.com/gagliardetto/binary"
	ag_solanago "github.com/gagliardetto/solana-go"
	ag_format "github.com/gagliardetto/solana-go/text/format"
	ag_treeout "github.com/gagliardetto/treeout"
)

// Cancel is the `cancel` instruction.
type Cancel struct {

	// [0] = [WRITE, SIGNER] initializer
	//
	// [1] = [WRITE] vaultAccount
	//
	// [2] = [] vaultAuthority
	//
	// [3] = [WRITE] initializerDepositTokenAccount
	//
	// [4] = [WRITE] escrowAccount
	//
	// [5] = [] tokenProgram
	ag_solanago.AccountMetaSlice `bin:"-" borsh_skip:"true"`
}

// NewCancelInstructionBuilder creates a new `Cancel` instruction builder.
func NewCancelInstructionBuilder() *Cancel {
	nd := &Cancel{
		AccountMetaSlice: make(ag_solanago.AccountMetaSlice, 6),
	}
	return nd
}

// SetInitializerAccount sets the "initializer" account.
func (inst *Cancel) SetInitializerAccount(initializer ag_solanago.PublicKey) *Cancel {
	inst.AccountMetaSlice[0] = ag_solanago.Meta(initializer).WRITE().SIGNER()
	return inst
}

// GetInitializerAccount gets the "initializer" account.
func (inst *Cancel) GetInitializerAccount() *ag_solanago.AccountMeta {
	return inst.AccountMetaSlice[0]
}

// SetVaultAccountAccount sets the "vaultAccount" account.
func (inst *Cancel) SetVaultAccountAccount(vaultAccount ag_solanago.PublicKey) *Cancel {
	inst.AccountMetaSlice[1] = ag_solanago.Meta(vaultAccount).WRITE()
	return inst
}

// GetVaultAccountAccount gets the "vaultAccount" account.
func (inst *Cancel) GetVaultAccountAccount() *ag_solanago.AccountMeta {
	return inst.AccountMetaSlice[1]
}

// SetVaultAuthorityAccount sets the "vaultAuthority" account.
func (inst *Cancel) SetVaultAuthorityAccount(vaultAuthority ag_solanago.PublicKey) *Cancel {
	inst.AccountMetaSlice[2] = ag_solanago.Meta(vaultAuthority)
	return inst
}

// GetVaultAuthorityAccount gets the "vaultAuthority" account.
func (inst *Cancel) GetVaultAuthorityAccount() *ag_solanago.AccountMeta {
	return inst.AccountMetaSlice[2]
}

// SetInitializerDepositTokenAccountAccount sets the "initializerDepositTokenAccount" account.
func (inst *Cancel) SetInitializerDepositTokenAccountAccount(initializerDepositTokenAccount ag_solanago.PublicKey) *Cancel {
	inst.AccountMetaSlice[3] = ag_solanago.Meta(initializerDepositTokenAccount).WRITE()
	return inst
}

// GetInitializerDepositTokenAccountAccount gets the "initializerDepositTokenAccount" account.
func (inst *Cancel) GetInitializerDepositTokenAccountAccount() *ag_solanago.AccountMeta {
	return inst.AccountMetaSlice[3]
}

// SetEscrowAccountAccount sets the "escrowAccount" account.
func (inst *Cancel) SetEscrowAccountAccount(escrowAccount ag_solanago.PublicKey) *Cancel {
	inst.AccountMetaSlice[4] = ag_solanago.Meta(escrowAccount).WRITE()
	return inst
}

// GetEscrowAccountAccount gets the "escrowAccount" account.
func (inst *Cancel) GetEscrowAccountAccount() *ag_solanago.AccountMeta {
	return inst.AccountMetaSlice[4]
}

// SetTokenProgramAccount sets the "tokenProgram" account.
func (inst *Cancel) SetTokenProgramAccount(tokenProgram ag_solanago.PublicKey) *Cancel {
	inst.AccountMetaSlice[5] = ag_solanago.Meta(tokenProgram)
	return inst
}

// GetTokenProgramAccount gets the "tokenProgram" account.
func (inst *Cancel) GetTokenProgramAccount() *ag_solanago.AccountMeta {
	return inst.AccountMetaSlice[5]
}

func (inst Cancel) Build() *Instruction {
	return &Instruction{BaseVariant: ag_binary.BaseVariant{
		Impl:   inst,
		TypeID: Instruction_Cancel,
	}}
}

// ValidateAndBuild validates the instruction parameters and accounts;
// if there is a validation error, it returns the error.
// Otherwise, it builds and returns the instruction.
func (inst Cancel) ValidateAndBuild() (*Instruction, error) {
	if err := inst.Validate(); err != nil {
		return nil, err
	}
	return inst.Build(), nil
}

func (inst *Cancel) Validate() error {
	// Check whether all (required) accounts are set:
	{
		if inst.AccountMetaSlice[0] == nil {
			return errors.New("accounts.Initializer is not set")
		}
		if inst.AccountMetaSlice[1] == nil {
			return errors.New("accounts.VaultAccount is not set")
		}
		if inst.AccountMetaSlice[2] == nil {
			return errors.New("accounts.VaultAuthority is not set")
		}
		if inst.AccountMetaSlice[3] == nil {
			return errors.New("accounts.InitializerDepositTokenAccount is not set")
		}
		if inst.AccountMetaSlice[4] == nil {
			return errors.New("accounts.EscrowAccount is not set")
		}
		if inst.AccountMetaSlice[5] == nil {
			return errors.New("accounts.TokenProgram is not set")
		}
	}
	return nil
}

func (inst *Cancel) EncodeToTree(parent ag_treeout.Branches) {
	parent.Child(ag_format.Program(ProgramName, ProgramID)).
		//
		ParentFunc(func(programBranch ag_treeout.Branches) {
			programBranch.Child(ag_format.Instruction("Cancel")).
				//
				ParentFunc(func(instructionBranch ag_treeout.Branches) {

					// Parameters of the instruction:
					instructionBranch.Child("Params[len=0]").ParentFunc(func(paramsBranch ag_treeout.Branches) {})

					// Accounts of the instruction:
					instructionBranch.Child("Accounts[len=6]").ParentFunc(func(accountsBranch ag_treeout.Branches) {
						accountsBranch.Child(ag_format.Meta("            initializer", inst.AccountMetaSlice[0]))
						accountsBranch.Child(ag_format.Meta("                  vault", inst.AccountMetaSlice[1]))
						accountsBranch.Child(ag_format.Meta("         vaultAuthority", inst.AccountMetaSlice[2]))
						accountsBranch.Child(ag_format.Meta("initializerDepositToken", inst.AccountMetaSlice[3]))
						accountsBranch.Child(ag_format.Meta("                 escrow", inst.AccountMetaSlice[4]))
						accountsBranch.Child(ag_format.Meta("           tokenProgram", inst.AccountMetaSlice[5]))
					})
				})
		})
}

func (obj Cancel) MarshalWithEncoder(encoder *ag_binary.Encoder) (err error) {
	return nil
}
func (obj *Cancel) UnmarshalWithDecoder(decoder *ag_binary.Decoder) (err error) {
	return nil
}

// NewCancelInstruction declares a new Cancel instruction with the provided parameters and accounts.
func NewCancelInstruction(
	// Accounts:
	initializer ag_solanago.PublicKey,
	vaultAccount ag_solanago.PublicKey,
	vaultAuthority ag_solanago.PublicKey,
	initializerDepositTokenAccount ag_solanago.PublicKey,
	escrowAccount ag_solanago.PublicKey,
	tokenProgram ag_solanago.PublicKey) *Cancel {
	return NewCancelInstructionBuilder().
		SetInitializerAccount(initializer).
		SetVaultAccountAccount(vaultAccount).
		SetVaultAuthorityAccount(vaultAuthority).
		SetInitializerDepositTokenAccountAccount(initializerDepositTokenAccount).
		SetEscrowAccountAccount(escrowAccount).
		SetTokenProgramAccount(tokenProgram)
}
